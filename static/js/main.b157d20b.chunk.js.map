{"version":3,"sources":["components/confing-side/DatePicker.js","actions/index.js","components/confing-side/TimePicker.js","components/confing-side/EventNameForm.js","components/confing-side/index.js","components/main-side/EventNameDisplay.js","components/main-side/TimeAndDate.js","styles/styled-component.js","components/main-side/index.js","components/styling-side/BgColorPicker.js","components/styling-side/TextColorPicker.js","components/styling-side/SizeSlider.js","components/styling-side/index.js","App.js","reducers/index.js","index.js"],"names":["DatePickerC","dispatchDate","useDispatch","showDate","useSelector","state","date","className","dateFormat","selected","onChange","type","payload","getDateAction","minDate","Date","TimePicker","dispatchTime","showTime","clock","time","getTimeAction","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","EventName","dispatchName","inputRef","useRef","ref","e","name","target","value","getEventName","placeholder","LeftSide","DatePicker","EventNameCenter","eventName","TimeAndDate","timeProp","dateProp","useState","timePropLocal","setTimeProp","datePropLocal","setDateProp","useEffect","renderDateTimeLeft","setInterval","now","distanceTime","distanceDate","days","Math","floor","hours","minutes","seconds","hour","minute","second","day","clearInterval","toDateString","Swatch","styled","div","Color","props","background","Popover","Cover","MainSideSection","section","tColor","radius","width","height","Slider","input","MainSide","bgColor","text","textColor","borderRadius","sizeWidth","sizeHeight","BgColorPicker","colorPanel","setColorPanel","dispatchBg","onClick","color","getBgColor","TextColorPicker","dispatchText","getTextColor","SizeSlider","dispatchSize","dispatchRadius","widthSize","heightSize","min","max","step","undefined","parseFloat","toFixed","RightSide","App","id","defaultState","parse","store","createStore","getTime","hex","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b157d20b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getDateAction } from \"../../actions\";\r\n\r\nconst DatePickerC = () => {\r\n  const dispatchDate = useDispatch();\r\n  const showDate = useSelector(state => state.date);\r\n\r\n  const handleDispatchDate = date => {\r\n    return dispatchDate(getDateAction(date));\r\n  };\r\n\r\n  return (\r\n    <div className=\"config-side__config config-side__config--date\">\r\n      <p className=\"sub-title\">Countdown to date:</p>\r\n      <DatePicker\r\n        className=\"config-side__input\"\r\n        dateFormat=\"dd/MM/yyyy\"\r\n        selected={showDate}\r\n        onChange={handleDispatchDate}\r\n        minDate={new Date()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatePickerC;\r\n","export const getDateAction = date => {\r\n  return {\r\n    type: \"calendar\",\r\n    payload: date\r\n  };\r\n};\r\n\r\nexport const getTimeAction = time => {\r\n  return {\r\n    type: \"clock\",\r\n    payload: time\r\n  };\r\n};\r\n\r\nexport const getEventName = name => {\r\n  return {\r\n    type: \"name\",\r\n    payload: name\r\n  };\r\n};\r\n\r\nexport const getBgColor = color => {\r\n  return {\r\n    type: \"bgColor\",\r\n    payload: color\r\n  };\r\n};\r\n\r\nexport const getTextColor = color => {\r\n  return {\r\n    type: \"textColor\",\r\n    payload: color\r\n  };\r\n};\r\n\r\nexport const getSize = sizeValue => {\r\n  return {\r\n    type: \"size\",\r\n    payload: sizeValue\r\n  };\r\n};\r\n\r\nexport const getBorderRadius = radius => {\r\n  return {\r\n    type: \"radius\",\r\n    payload: radius\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getTimeAction } from \"../../actions\";\r\n\r\nconst TimePicker = () => {\r\n  const dispatchTime = useDispatch();\r\n  const showTime = useSelector(state => state.clock);\r\n\r\n  const handleDispatchTime = time => {\r\n    return dispatchTime(getTimeAction(time));\r\n  };\r\n\r\n  return (\r\n    <div className=\"config-side__config config-side__config--time\">\r\n      <p className=\"sub-title\">Event time:</p>\r\n      <DatePicker\r\n        className=\"config-side__input\"\r\n        selected={showTime}\r\n        onChange={handleDispatchTime}\r\n        showTimeSelect\r\n        showTimeSelectOnly\r\n        timeIntervals={10}\r\n        timeCaption=\"Time\"\r\n        dateFormat=\"HH:mm\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimePicker;\r\n","import React, { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getEventName } from \"../../actions\";\r\n\r\nconst EventName = () => {\r\n  const dispatchName = useDispatch();\r\n  const inputRef = useRef();\r\n\r\n  const handleEventName = e => {\r\n    const name = e.target.value;\r\n    dispatchName(getEventName(name));\r\n  };\r\n  return (\r\n    <div className=\"config-side__config config-side__config--name\">\r\n      <p className=\"sub-title\">Countdown title</p>\r\n      <input\r\n        className=\"config-side__input\"\r\n        ref={inputRef}\r\n        type=\"text\"\r\n        onChange={handleEventName}\r\n        placeholder=\"Event Name\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventName;\r\n","import React from \"react\";\r\nimport DatePicker from \"./DatePicker\";\r\nimport TimePicker from \"./TimePicker\";\r\nimport EventName from \"./EventNameForm\";\r\n\r\nconst LeftSide = () => {\r\n  return (\r\n    <section className=\"config-side\">\r\n      <EventName />\r\n      <DatePicker />\r\n      <TimePicker />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LeftSide;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst EventNameCenter = () => {\r\n  const eventName = useSelector(({ eventName }) => eventName);\r\n\r\n  return <p className=\"main-side__title\">{eventName}</p>;\r\n};\r\n\r\nexport default EventNameCenter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst TimeAndDate = () => {\r\n  let timeProp = useSelector(state => state.clock);\r\n  let dateProp = useSelector(state => state.date);\r\n\r\n  const [timePropLocal, setTimeProp] = useState({});\r\n  const [datePropLocal, setDateProp] = useState({});\r\n\r\n  useEffect(() => {\r\n    const renderDateTimeLeft = setInterval(() => {\r\n      let now = new Date();\r\n\r\n      let distanceTime = timeProp - now;\r\n      let distanceDate = dateProp - now;\r\n\r\n      let days = Math.floor(distanceDate / (1000 * 60 * 60 * 24));\r\n      let hours = Math.floor(\r\n        (distanceTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n      );\r\n      let minutes = Math.floor((distanceTime % (1000 * 60 * 60)) / (1000 * 60));\r\n      let seconds = Math.floor((distanceTime % (1000 * 60)) / 1000);\r\n\r\n      setTimeProp({\r\n        ...timePropLocal,\r\n        hour: hours,\r\n        minute: minutes,\r\n        second: seconds\r\n      });\r\n\r\n      setDateProp({ day: days + 1 });\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(renderDateTimeLeft);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"main-side__clock\">\r\n      <div>\r\n        {datePropLocal.day}\r\n        <p>\r\n          {datePropLocal.day > 1 || datePropLocal.day < -1 ? \" days \" : \" day \"}\r\n        </p>\r\n      </div>\r\n      <div className=\"main-side__clock--border\">\r\n        {timePropLocal.hour}\r\n        <p>\r\n          {timePropLocal.hour > 1 || timePropLocal.hour < -1\r\n            ? \" hours \"\r\n            : \" hour \"}\r\n        </p>\r\n      </div>\r\n      <div className=\"main-side__clock--border\">\r\n        {timePropLocal.minute}\r\n        <p>\r\n          {timePropLocal.minute > 1 || timePropLocal.minute < -1\r\n            ? \" minutes \"\r\n            : \" minute \"}\r\n        </p>\r\n      </div>\r\n      <div>\r\n        {timePropLocal.second}\r\n        <p>\r\n          {timePropLocal.second > 1 || timePropLocal.second < -1\r\n            ? \" seconds \"\r\n            : \" second \"}\r\n        </p>\r\n      </div>\r\n      <p className=\"main-side__timeAndDate\">\r\n        {new Date(dateProp).toDateString()}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeAndDate;\r\n","import styled from \"styled-components\";\n\nexport const Swatch = styled.div`\n  padding: 0.5rem;\n  background-color: #fff;\n  border-radius: 0.1rem;\n  box-shadow: 0 0 0 0.1rem rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n  width: 6rem;\n  height: 6rem;\n`;\n\nexport const Color = styled.div`\n  width: 6rem;\n  height: 6rem;\n  border-radius: 0.2rem;\n  background-color: ${props => (props.background ? props.background : \"#f95\")};\n`;\n\nexport const Popover = styled.div`\n  position: absolute;\n  z-index: 2;\n`;\n\nexport const Cover = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n`;\n\nexport const MainSideSection = styled.section`\n  background-color: ${props => (props.background ? props.background : \"#0af\")};\n  color: ${props => (props.tColor ? props.tColor : \"#f1f1f1\")};\n  border-radius: ${props => (props.radius ? `${props.radius}rem` : \"0\")};\n  width: ${props => (props.width ? props.width : \"50\")}rem;\n  height: ${props => (props.height ? props.height : \"15\")}rem;\n`;\n\nexport const Slider = styled.input`\n  border: 1px solid red;\n`;\n","import React from \"react\";\r\nimport EventNameCenter from \"./EventNameDisplay\";\r\nimport TimeAndDate from \"./TimeAndDate\";\r\nimport { MainSideSection } from \"../../styles/styled-component\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst MainSide = () => {\r\n  const background = useSelector(state => state.bgColor);\r\n  const text = useSelector(state => state.textColor);\r\n  const borderRadius = useSelector(state => state.borderRadius);\r\n  const width = useSelector(state => state.sizeWidth);\r\n  const height = useSelector(state => state.sizeHeight);\r\n\r\n  return (\r\n    <MainSideSection\r\n      background={background}\r\n      tColor={text}\r\n      radius={borderRadius}\r\n      width={width}\r\n      height={height}\r\n      className=\"main-side\">\r\n      <EventNameCenter className=\"main-side__event-name\" />\r\n      <TimeAndDate className=\"main-side__time-date\" />\r\n    </MainSideSection>\r\n  );\r\n};\r\n\r\nexport default MainSide;\r\n","import React, { useState } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getBgColor } from \"../../actions\";\nimport { Swatch, Color, Popover, Cover } from \"../../styles/styled-component\";\n\nconst BgColorPicker = () => {\n  const [colorPanel, setColorPanel] = useState(false);\n\n  const handleClick = () => {\n    setColorPanel(!colorPanel);\n  };\n\n  const handleClose = () => {\n    setColorPanel(false);\n  };\n\n  const dispatchBg = useDispatch();\n  const bgColor = useSelector(state => state.bgColor);\n  return (\n    <div>\n      <Swatch onClick={handleClick}>\n        <Color background={bgColor} />\n      </Swatch>\n      {colorPanel ? (\n        <Popover>\n          <Cover onClick={handleClose} />\n          <SketchPicker\n            color={bgColor}\n            onChange={color => dispatchBg(getBgColor(color))}\n          />\n        </Popover>\n      ) : null}\n    </div>\n  );\n};\n\nexport default BgColorPicker;\n","import React, { useState } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getTextColor } from \"../../actions\";\nimport { Swatch, Color, Popover, Cover } from \"../../styles/styled-component\";\n\nconst TextColorPicker = () => {\n  const [colorPanel, setColorPanel] = useState(false);\n\n  const handleClick = () => {\n    setColorPanel(!colorPanel);\n  };\n\n  const handleClose = () => {\n    setColorPanel(false);\n  };\n\n  const dispatchText = useDispatch();\n  const textColor = useSelector(state => state.textColor);\n  return (\n    <div>\n      <Swatch onClick={handleClick}>\n        <Color background={textColor} />\n      </Swatch>\n      {colorPanel ? (\n        <Popover>\n          <Cover onClick={handleClose} />\n          <SketchPicker\n            color={textColor}\n            onChange={color => dispatchText(getTextColor(color))}\n          />\n        </Popover>\n      ) : null}\n    </div>\n  );\n};\n\nexport default TextColorPicker;\n","import React from \"react\";\nimport { getSize, getBorderRadius } from \"../../actions\";\nimport { Slider } from \"../../styles/styled-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst SizeSlider = () => {\n  const dispatchSize = useDispatch();\n  const dispatchRadius = useDispatch();\n  const widthSize = useSelector(state => state.sizeWidth);\n  const heightSize = useSelector(state => state.sizeHeight);\n  const borderRadius = useSelector(state => state.borderRadius);\n\n  return (\n    <div>\n      <Slider\n        type=\"range\"\n        min=\"70\"\n        max=\"150\"\n        step=\"1\"\n        onChange={e => dispatchSize(getSize(e.target.value))}\n      />\n      <p>\n        Width:{\" \"}\n        {widthSize > 0 && widthSize !== undefined && widthSize !== null\n          ? `${parseFloat(widthSize).toFixed(0)}0px`\n          : null}\n      </p>\n      <p>\n        Height:\n        {heightSize > 0 && heightSize !== undefined && heightSize !== null\n          ? `${parseFloat(heightSize).toFixed(0)}0px`\n          : null}\n      </p>\n      <Slider\n        type=\"range\"\n        min=\"0\"\n        max=\"10\"\n        step=\"1\"\n        value={borderRadius}\n        onChange={e => dispatchRadius(getBorderRadius(e.target.value))}\n      />\n    </div>\n  );\n};\n\nexport default SizeSlider;\n","import React from \"react\";\nimport BgColorPicker from \"./BgColorPicker\";\nimport TextColorPicker from \"./TextColorPicker\";\nimport SizeSlider from \"./SizeSlider\";\n\nconst RightSide = () => {\n  return (\n    <section className=\"styling-side\">\n      <div className=\"color-panel\">\n        <p className=\"sub-title\">Colors</p>\n        <div className=\"color-panel--left\">\n          <BgColorPicker />\n          <p className=\"color-panel__title--left\">Background Color</p>\n        </div>\n        <div className=\"color-panel--right\">\n          <TextColorPicker />\n          <p className=\"color-panel__title--right\">Text Color</p>\n        </div>\n      </div>\n      <SizeSlider />\n    </section>\n  );\n};\n\nexport default RightSide;\n","import React from \"react\";\nimport LeftSide from \"./components/confing-side\";\nimport MainSide from \"./components/main-side\";\nimport RightSide from \"./components/styling-side\";\n\nfunction App() {\n  return (\n    <main id=\"app\">\n      <LeftSide />\n      <MainSide />\n      <RightSide />\n    </main>\n  );\n}\n\nexport default App;\n","const defaultState = {\r\n  date: Date.parse(new Date()),\r\n  clock: new Date(),\r\n  eventName: \"Event Name\",\r\n  bgColor: \"\",\r\n  textColor: \"\",\r\n  sizeWidth: null,\r\n  sizeHeight: null,\r\n  borderRadius: 0\r\n};\r\n\r\nexport default function(state = defaultState, { type, payload }) {\r\n  switch (type) {\r\n    case \"calendar\":\r\n      return {\r\n        ...state,\r\n        date: Date.parse(payload)\r\n      };\r\n    case \"clock\":\r\n      return {\r\n        ...state,\r\n        clock: payload.getTime()\r\n      };\r\n    case \"name\":\r\n      return {\r\n        ...state,\r\n        eventName: payload\r\n      };\r\n    case \"bgColor\":\r\n      return {\r\n        ...state,\r\n        bgColor: payload.hex\r\n      };\r\n    case \"textColor\":\r\n      return {\r\n        ...state,\r\n        textColor: payload.hex\r\n      };\r\n    case \"size\":\r\n      return {\r\n        ...state,\r\n        sizeWidth: payload * 0.5,\r\n        sizeHeight: payload * 0.2\r\n      };\r\n    case \"radius\":\r\n      return {\r\n        ...state,\r\n        borderRadius: payload\r\n      };\r\n    default:\r\n      console.log(state);\r\n  }\r\n  return state;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport allReducers from \"./reducers\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/styles-reset.css\";\nimport \"./styles/main-styles.css\";\n\nconst store = createStore(allReducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"wrapper\")\n);\n"],"sourceRoot":""}