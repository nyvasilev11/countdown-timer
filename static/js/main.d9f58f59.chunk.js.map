{"version":3,"sources":["actions/index.js","components/confing-side/DatePicker.js","components/confing-side/TimePicker.js","components/confing-side/EventNameForm.js","components/confing-side/index.js","components/main-side/EventNameDisplay.js","components/main-side/TimeAndDate.js","styles/styled-component.js","components/main-side/index.js","components/styling-side/BgColorPicker.js","components/styling-side/TextColorPicker.js","components/styling-side/SizeSlider.js","components/styling-side/CheckBoxOptions.js","components/styling-side/index.js","App.js","reducers/index.js","index.js"],"names":["isCheckboxCheked","isCheck","type","payload","DatePickerC","dispatchDate","useDispatch","showDate","useSelector","state","date","className","dateFormat","selected","onChange","getDateAction","minDate","Date","TimePicker","dispatchTime","showTime","clock","time","getTimeAction","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","EventName","dispatchName","inputRef","useRef","ref","e","name","target","value","getEventName","placeholder","LeftSide","DatePicker","EventNameCenter","eventName","TimeAndDate","timeProp","dateProp","useState","timePropLocal","setTimeProp","datePropLocal","setDateProp","checkBox","checkBoxChecked","useEffect","renderDateTimeLeft","setInterval","now","distanceTime","distanceDate","days","Math","floor","hours","minutes","seconds","hour","minute","second","day","clearInterval","toDateString","MainSideSection","styled","section","props","background","tColor","radius","width","height","Swatch","div","Color","Popover","Cover","Slider","input","CheckBoxInput","CheckBoxLabel","label","MainSide","bgColor","text","textColor","borderRadius","sizeWidth","sizeHeight","BgColorPicker","colorPanel","setColorPanel","dispatchBg","onClick","color","getBgColor","TextColorPicker","dispatchText","getTextColor","SizeSlider","dispatchSize","dispatchRadius","widthSize","heightSize","min","max","step","undefined","parseFloat","toFixed","CheckBoxOption","id","checkedDispatch","isChecked","element","checked","console","log","handleChange","htmlFor","RightSide","App","setDate","getDate","setTime","getTime","defaultState","store","createStore","hex","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9f58f59.chunk.js","sourcesContent":["export const getDateAction = date => {\r\n  return {\r\n    type: \"calendar\",\r\n    payload: date\r\n  };\r\n};\r\n\r\nexport const getTimeAction = time => {\r\n  return {\r\n    type: \"clock\",\r\n    payload: time\r\n  };\r\n};\r\n\r\nexport const getEventName = name => {\r\n  return {\r\n    type: \"name\",\r\n    payload: name\r\n  };\r\n};\r\n\r\nexport const getBgColor = color => {\r\n  return {\r\n    type: \"bgColor\",\r\n    payload: color\r\n  };\r\n};\r\n\r\nexport const getTextColor = color => {\r\n  return {\r\n    type: \"textColor\",\r\n    payload: color\r\n  };\r\n};\r\n\r\nexport const getSize = sizeValue => {\r\n  return {\r\n    type: \"size\",\r\n    payload: sizeValue\r\n  };\r\n};\r\n\r\nexport const getBorderRadius = radius => {\r\n  return {\r\n    type: \"radius\",\r\n    payload: radius\r\n  };\r\n};\r\n\r\nexport const isCheckboxCheked = isCheck => {\r\n  return {\r\n    type: \"checkBox\",\r\n    payload: isCheck\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getDateAction } from \"../../actions\";\r\n\r\nconst DatePickerC = () => {\r\n  const dispatchDate = useDispatch();\r\n  const showDate = useSelector(state => state.date);\r\n\r\n  const handleDispatchDate = date => {\r\n    return dispatchDate(getDateAction(date));\r\n  };\r\n\r\n  return (\r\n    <div className=\"config-side__config config-side__config--date\">\r\n      <p className=\"sub-title\">Countdown to date:</p>\r\n      <DatePicker\r\n        className=\"config-side__input\"\r\n        dateFormat=\"dd/MM/yyyy\"\r\n        selected={showDate}\r\n        onChange={handleDispatchDate}\r\n        minDate={new Date()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatePickerC;\r\n","import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getTimeAction } from \"../../actions\";\r\n\r\nconst TimePicker = () => {\r\n  const dispatchTime = useDispatch();\r\n  const showTime = useSelector(state => state.clock);\r\n\r\n  const handleDispatchTime = time => {\r\n    return dispatchTime(getTimeAction(time));\r\n  };\r\n\r\n  return (\r\n    <div className=\"config-side__config config-side__config--time\">\r\n      <p className=\"sub-title\">Event time:</p>\r\n      <DatePicker\r\n        className=\"config-side__input\"\r\n        selected={showTime}\r\n        onChange={handleDispatchTime}\r\n        showTimeSelect\r\n        showTimeSelectOnly\r\n        timeIntervals={10}\r\n        timeCaption=\"Time\"\r\n        dateFormat=\"HH:mm\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimePicker;\r\n","import React, { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getEventName } from \"../../actions\";\r\n\r\nconst EventName = () => {\r\n  const dispatchName = useDispatch();\r\n  const inputRef = useRef();\r\n\r\n  const handleEventName = e => {\r\n    const name = e.target.value;\r\n    dispatchName(getEventName(name));\r\n  };\r\n  return (\r\n    <div className=\"config-side__config config-side__config--name\">\r\n      <p className=\"sub-title\">Countdown title</p>\r\n      <input\r\n        className=\"config-side__input\"\r\n        ref={inputRef}\r\n        type=\"text\"\r\n        onChange={handleEventName}\r\n        placeholder=\"Event Name\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventName;\r\n","import React from \"react\";\r\nimport DatePicker from \"./DatePicker\";\r\nimport TimePicker from \"./TimePicker\";\r\nimport EventName from \"./EventNameForm\";\r\n\r\nconst LeftSide = () => {\r\n  return (\r\n    <section className=\"config-side\">\r\n      <EventName />\r\n      <DatePicker />\r\n      <TimePicker />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LeftSide;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst EventNameCenter = () => {\r\n  const eventName = useSelector(({ eventName }) => eventName);\r\n\r\n  return <p className=\"main-side__title\">{eventName}</p>;\r\n};\r\n\r\nexport default EventNameCenter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst TimeAndDate = () => {\r\n  let timeProp = useSelector(state => state.clock);\r\n  let dateProp = useSelector(state => state.date);\r\n\r\n  const [timePropLocal, setTimeProp] = useState({});\r\n  const [datePropLocal, setDateProp] = useState({});\r\n\r\n  const checkBox = useSelector(state => state.checkBoxChecked);\r\n\r\n  useEffect(() => {\r\n    const renderDateTimeLeft = setInterval(() => {\r\n      let now = new Date();\r\n\r\n      let distanceTime = timeProp - now;\r\n      let distanceDate = dateProp - now;\r\n\r\n      let days = Math.floor(distanceDate / (1000 * 60 * 60 * 24));\r\n      let hours = Math.floor(\r\n        (distanceTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n      );\r\n      let minutes = Math.floor((distanceTime % (1000 * 60 * 60)) / (1000 * 60));\r\n      let seconds = Math.floor((distanceTime % (1000 * 60)) / 1000);\r\n      // let mili = Math.floor((distanceTime % 100) * 100);\r\n\r\n      setTimeProp({\r\n        ...timePropLocal,\r\n        hour: hours,\r\n        minute: minutes,\r\n        second: seconds\r\n      });\r\n\r\n      setDateProp({ day: days + 1 });\r\n    }, 100);\r\n    return () => {\r\n      clearInterval(renderDateTimeLeft);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"main-side__clock\">\r\n      <div>\r\n        {datePropLocal.day}\r\n        <p>\r\n          {datePropLocal.day > 1 || datePropLocal.day < -1 ? \" days \" : \" day \"}\r\n        </p>\r\n      </div>\r\n      <div className=\"main-side__clock--border\">\r\n        {timePropLocal.hour}\r\n        <p>\r\n          {timePropLocal.hour > 1 || timePropLocal.hour < -1\r\n            ? \" hours \"\r\n            : \" hour \"}\r\n        </p>\r\n      </div>\r\n      <div className=\"main-side__clock--border\">\r\n        {timePropLocal.minute}\r\n        <p>\r\n          {timePropLocal.minute > 1 || timePropLocal.minute < -1\r\n            ? \" minutes \"\r\n            : \" minute \"}\r\n        </p>\r\n      </div>\r\n      <div>\r\n        {timePropLocal.second}\r\n        <p>\r\n          {timePropLocal.second > 1 || timePropLocal.second < -1\r\n            ? \" seconds \"\r\n            : \" second \"}\r\n        </p>\r\n      </div>\r\n\r\n      {checkBox === \"hide_date_title\" ? null : (\r\n        <p className=\"main-side__timeAndDate\">\r\n          {new Date(dateProp).toDateString()}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeAndDate;\r\n","import styled from \"styled-components\";\n\n// main side\nexport const MainSideSection = styled.section`\n  background-color: ${props => props.background};\n  color: ${props => props.tColor};\n  border-radius: ${props => (props.radius ? `${props.radius}rem` : \"0\")};\n  width: ${props => (props.width ? props.width : \"50\")}rem;\n  height: ${props => (props.height ? props.height : \"15\")}rem;\n`;\n\n// styling side\nexport const Swatch = styled.div`\n  padding: 0.5rem;\n  background-color: #fff;\n  border-radius: 0.1rem;\n  box-shadow: 0 0 0 0.1rem rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n  width: 6rem;\n  height: 6rem;\n`;\n\nexport const Color = styled.div`\n  width: 5rem;\n  height: 5rem;\n  border-radius: 0.2rem;\n  background-color: ${props => (props.background ? props.background : \"#f95\")};\n`;\n\nexport const Popover = styled.div`\n  position: absolute;\n  z-index: 2;\n`;\n\nexport const Cover = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n`;\n\n// sliders\nconst sliderThumb = () => `\n    -webkit-appearance: none;\n    appearance: none;\n    width: 25px;\n    height: 25px;\n    background: #00DCE4;\n    cursor: pointer;\n`;\n\nexport const Slider = styled.input`\n  -webkit-appearance: none;\n  width: 100%;\n  height: 1rem;\n  background: #a0f68b;\n  outline: none;\n  opacity: 0.7;\n  -webkit-transition: 0.2s;\n  transition: opacity 0.2s;\n  margin: 2rem 0;\n\n  &::-webkit-slider-thumb {\n    ${props => sliderThumb(props)};\n  }\n\n  &::-moz-range-thumb {\n    ${props => sliderThumb(props)};\n  }\n`;\n\n//checkBoxOptions\nexport const CheckBoxInput = styled.input`\n  position: absolute;\n  opacity: 0;\n\n  & + label {\n    position: relative;\n    cursor: pointer;\n    padding: 0;\n  }\n\n  & + label:before {\n    content: \"\";\n    margin-right: 10px;\n    display: inline-block;\n    vertical-align: text-top;\n    width: 16px;\n    height: 16px;\n    background: #fff;\n  }\n\n  &:hover + label:before {\n    background: #0af;\n  }\n\n  &:checked + label:before {\n    background: #0af;\n  }\n\n  &:disabled + label {\n    color: #b8b8b8;\n    cursor: auto;\n  }\n\n  &:disabled + label:before {\n    box-shadow: none;\n    background: #ddd;\n  }\n\n  &:checked + label:after {\n    content: \"\";\n    position: absolute;\n    left: 3px;\n    top: 7px;\n    background: #fff;\n    width: 2px;\n    height: 2px;\n    box-shadow: 2px 0 0 white, 4px 0 0 white, 4px -2px 0 white, 4px -4px 0 white,\n      4px -6px 0 white, 4px -8px 0 white;\n    transform: rotate(45deg);\n  }\n`;\n\nexport const CheckBoxLabel = styled.label`\n  font-size: 1.5rem;\n`;\n","import React from \"react\";\r\nimport EventNameCenter from \"./EventNameDisplay\";\r\nimport TimeAndDate from \"./TimeAndDate\";\r\nimport { MainSideSection } from \"../../styles/styled-component\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst MainSide = () => {\r\n  const background = useSelector(state => state.bgColor);\r\n  const text = useSelector(state => state.textColor);\r\n  const borderRadius = useSelector(state => state.borderRadius);\r\n  const width = useSelector(state => state.sizeWidth);\r\n  const height = useSelector(state => state.sizeHeight);\r\n  const checkBox = useSelector(state => state.checkBoxChecked);\r\n\r\n  return (\r\n    <MainSideSection\r\n      background={checkBox === \"transparency\" ? \"transperant\" : background}\r\n      tColor={text}\r\n      radius={borderRadius}\r\n      width={width}\r\n      height={height}\r\n      className=\"main-side\">\r\n      {checkBox === \"hide_date_title\" ? null : (\r\n        <EventNameCenter className=\"main-side__event-name\" />\r\n      )}\r\n      <TimeAndDate className=\"main-side__time-date\" />\r\n    </MainSideSection>\r\n  );\r\n};\r\n\r\nexport default MainSide;\r\n","import React, { useState } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getBgColor } from \"../../actions\";\nimport { Swatch, Color, Popover, Cover } from \"../../styles/styled-component\";\n\nconst BgColorPicker = () => {\n  const [colorPanel, setColorPanel] = useState(false);\n\n  const handleClick = () => {\n    setColorPanel(!colorPanel);\n  };\n\n  const handleClose = () => {\n    setColorPanel(false);\n  };\n\n  const dispatchBg = useDispatch();\n  const bgColor = useSelector(state => state.bgColor);\n  return (\n    <div>\n      <Swatch onClick={handleClick}>\n        <Color background={bgColor} />\n      </Swatch>\n      {colorPanel ? (\n        <Popover>\n          <Cover onClick={handleClose} />\n          <SketchPicker\n            color={bgColor}\n            onChange={color => dispatchBg(getBgColor(color))}\n          />\n        </Popover>\n      ) : null}\n    </div>\n  );\n};\n\nexport default BgColorPicker;\n","import React, { useState } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getTextColor } from \"../../actions\";\nimport { Swatch, Color, Popover, Cover } from \"../../styles/styled-component\";\n\nconst TextColorPicker = () => {\n  const [colorPanel, setColorPanel] = useState(false);\n\n  const handleClick = () => {\n    setColorPanel(!colorPanel);\n  };\n\n  const handleClose = () => {\n    setColorPanel(false);\n  };\n\n  const dispatchText = useDispatch();\n  const textColor = useSelector(state => state.textColor);\n  return (\n    <div>\n      <Swatch onClick={handleClick}>\n        <Color background={textColor} />\n      </Swatch>\n      {colorPanel ? (\n        <Popover>\n          <Cover onClick={handleClose} />\n          <SketchPicker\n            color={textColor}\n            onChange={color => dispatchText(getTextColor(color))}\n          />\n        </Popover>\n      ) : null}\n    </div>\n  );\n};\n\nexport default TextColorPicker;\n","import React from \"react\";\nimport { getSize, getBorderRadius } from \"../../actions\";\nimport { Slider } from \"../../styles/styled-component\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst SizeSlider = () => {\n  const dispatchSize = useDispatch();\n  const dispatchRadius = useDispatch();\n  const widthSize = useSelector(state => state.sizeWidth);\n  const heightSize = useSelector(state => state.sizeHeight);\n  const borderRadius = useSelector(state => state.borderRadius);\n\n  return (\n    <div>\n      <Slider\n        type=\"range\"\n        min=\"70\"\n        max=\"150\"\n        step=\"1\"\n        onChange={e => dispatchSize(getSize(e.target.value))}\n      />\n      <p>\n        Width:\n        {widthSize > 0 && widthSize !== undefined && widthSize !== null\n          ? `${parseFloat(widthSize).toFixed(0)}0px`\n          : null}\n      </p>\n      <p>\n        Height:\n        {heightSize > 0 && heightSize !== undefined && heightSize !== null\n          ? `${parseFloat(heightSize).toFixed(0)}0px`\n          : null}\n      </p>\n      <Slider\n        type=\"range\"\n        min=\"0\"\n        max=\"10\"\n        step=\"1\"\n        value={borderRadius}\n        onChange={e => dispatchRadius(getBorderRadius(e.target.value))}\n      />\n    </div>\n  );\n};\n\nexport default SizeSlider;\n","import React from \"react\";\nimport { CheckBoxInput, CheckBoxLabel } from \"../../styles/styled-component\";\nimport { useDispatch } from \"react-redux\";\nimport { isCheckboxCheked } from \"../../actions\";\n\nconst CheckBoxOption = ({ id, label }) => {\n  const checkedDispatch = useDispatch();\n\n  const handleChange = e => {\n    const target = e.target;\n\n    const isChecked = element => {\n      if (element) {\n        if (element.checked) {\n          return checkedDispatch(isCheckboxCheked(element.id));\n        } else if (!element.checked) {\n          return checkedDispatch(isCheckboxCheked(`un${element.id}`));\n        }\n      }\n    };\n\n    switch (target.id) {\n      case \"transparency\":\n        isChecked(target);\n        break;\n      case \"hide_date_title\":\n        isChecked(target);\n        break;\n      // case \"show_millisec\":\n      //   isChecked(target);\n      //   break;\n      default:\n        console.log(target.id);\n        break;\n    }\n  };\n\n  return (\n    <div className=\"checkboxes__element\">\n      <CheckBoxInput id={id} type=\"checkbox\" onChange={e => handleChange(e)} />\n      <CheckBoxLabel htmlFor={id}>{label}</CheckBoxLabel>\n    </div>\n  );\n};\n\nexport default CheckBoxOption;\n","import React from \"react\";\nimport BgColorPicker from \"./BgColorPicker\";\nimport TextColorPicker from \"./TextColorPicker\";\nimport SizeSlider from \"./SizeSlider\";\nimport CheckBoxOption from \"./CheckBoxOptions\";\n\nconst RightSide = () => {\n  return (\n    <section className=\"styling-side\">\n      <div className=\"color-panel\">\n        <p className=\"sub-title\">Colors</p>\n        <div className=\"color-panel__blocks\">\n          <div className=\"color-panel--left\">\n            <BgColorPicker />\n            <p className=\"color-panel__title color-panel__title--left\">\n              Background Color\n            </p>\n          </div>\n          <div className=\"color-panel--right\">\n            <TextColorPicker />\n            <p className=\"color-panel__title color-panel__title--right\">\n              Text Color\n            </p>\n          </div>\n        </div>\n      </div>\n      <SizeSlider />\n      <div className=\"checkboxes\">\n        <CheckBoxOption id={\"transparency\"} label={\"Transparent background\"} />\n        <CheckBoxOption id={\"hide_date_title\"} label={\"Hide date and title\"} />\n        {/* <CheckBoxOption id={\"show_millisec\"} label={\"Show 10ths of seconds\"} /> */}\n      </div>\n    </section>\n  );\n};\n\nexport default RightSide;\n","import React from \"react\";\nimport LeftSide from \"./components/confing-side\";\nimport MainSide from \"./components/main-side\";\nimport RightSide from \"./components/styling-side\";\n\nfunction App() {\n  return (\n    <main id=\"app\">\n      <LeftSide />\n      <MainSide />\n      <RightSide />\n    </main>\n  );\n}\n\nexport default App;\n","const date = new Date();\r\ndate.setDate(date.getDate() + 29);\r\n\r\nconst time = new Date();\r\ntime.setTime(time.getTime() + 1000 * (1000 * 1000));\r\n\r\nconst defaultState = {\r\n  date: date,\r\n  clock: time,\r\n  eventName: \"Event Name\",\r\n  bgColor: \"#0af\",\r\n  textColor: \"#f1f1f1\",\r\n  sizeWidth: null,\r\n  sizeHeight: null,\r\n  borderRadius: 0,\r\n  checkBoxChecked: \"\"\r\n};\r\n\r\nexport default function(state = defaultState, { type, payload }) {\r\n  switch (type) {\r\n    case \"calendar\":\r\n      return {\r\n        ...state,\r\n        date: payload\r\n      };\r\n    case \"clock\":\r\n      return {\r\n        ...state,\r\n        clock: payload\r\n      };\r\n    case \"name\":\r\n      return {\r\n        ...state,\r\n        eventName: payload\r\n      };\r\n    case \"bgColor\":\r\n      return {\r\n        ...state,\r\n        bgColor: payload.hex\r\n      };\r\n    case \"textColor\":\r\n      return {\r\n        ...state,\r\n        textColor: payload.hex\r\n      };\r\n    case \"size\":\r\n      return {\r\n        ...state,\r\n        sizeWidth: payload * 0.5,\r\n        sizeHeight: payload * 0.2\r\n      };\r\n    case \"radius\":\r\n      return {\r\n        ...state,\r\n        borderRadius: payload\r\n      };\r\n    case \"checkBox\":\r\n      return {\r\n        ...state,\r\n        checkBoxChecked: payload\r\n      };\r\n    default:\r\n      console.log(state);\r\n  }\r\n  return state;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport allReducers from \"./reducers\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/styles-reset.css\";\nimport \"./styles/main-styles.css\";\n\nconst store = createStore(allReducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"wrapper\")\n);\n"],"sourceRoot":""}